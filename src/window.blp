using Gtk 4.0;
using Adw 1;
using Vte 3.91;
using GtkSource 5;

Gtk.ApplicationWindow window {
  default-width: 800;
  default-height: 600;
  maximized: true;
  titlebar: Gtk.HeaderBar {
    [start]
    Button button_library {
      child: Adw.ButtonContent {
        icon-name: "library-symbolic";
        label: _("_Library");
        use-underline: true;
      };
      action-name: "win.library";
      tooltip-text: _("Open Library of Demos and Examples (Ctrl+Shift+O)");
    }

    [title]
    Box {
      spacing: 6;
      orientation: horizontal;
      homogeneous: true;

      ToggleButton button_code {
        child: Box {
          halign: center;

          Image {
            icon-name: "re.sonny.Workbench-code-symbolic";
          }

          Label {
            label: _("_Code");
            use-underline: true;
          }
        };

        styles ["flat", "view-toggler"]
      }

      ToggleButton button_style {
        child: Box {
          halign: center;

          Image {
            icon-name: "larger-brush-symbolic";
          }

          Label {
            label: _("_Style");
            use-underline: true;
          }
        };

        styles ["flat", "view-toggler"]
      }

      ToggleButton button_ui {
        child: Box {
          halign: center;

          Image {
            icon-name: "re.sonny.Workbench-ui-symbolic";
          }

          Label {
            label: _("_UI");
            use-underline: true;
          }
        };

        styles ["flat", "view-toggler"]
      }

      ToggleButton button_preview {
        child: Box {
          halign: center;

          Image {
            icon-name: "re.sonny.Workbench-preview-symbolic";
          }

          Label {
            label: _("_Preview");
            use-underline: true;
          }
        };

        styles ["flat", "view-toggler"]
      }
    }

    [end]
    MenuButton button_menu {
      menu-model: menu_app;
      icon-name: "open-menu-symbolic";
      tooltip-text: _("Main Menu");
      primary: true;
    }

    [end]
    Button button_run {
      child: Adw.ButtonContent {
        icon-name: "media-playback-start-symbolic";
        label: _("_Run");
        use-underline: true;
      };
      action-name: "win.run";
      tooltip-text: _("Run (Ctrl+⏎)");
      styles ["suggested-action"]
    }
  };

  [content]
  Adw.ToastOverlay toast_overlay {
    Paned paned {
      orientation: vertical;
      shrink-start-child: false;
      shrink-end-child: false;
      resize-start-child: true;
      resize-end-child: true;

      [start]
      Box {
        orientation: horizontal;
        vexpand: true;
        homogeneous: true;

        Box panel_code {
          name: "panel_code";
          orientation: vertical;

          CenterBox {
            styles ["toolbar", "panel_header"]

            [start]
            Box {
              Label {
                label: _("<b>Code</b>");
                use-markup: true;
                styles ["dim-label"]
              }

              Separator {
                styles ["spacer"]
              }

              DropDown dropdown_code_lang {
                model: StringList {
                  strings [
                    "JavaScript",
                    "Vala",
                  ]
                };
                tooltip-text: _("Switch Document");
              }
            }
          }

          Separator {
          }

          Stack stack_code {
            hexpand: true;
            StackPage {
              name: 'JavaScript';
              child: .CodeView code_view_javascript {
                language_id: 'js';
              };
            }
            StackPage {
              name: 'Vala';
              child: .CodeView code_view_vala {
                language_id: 'vala';
              };
            }
          }
        }

        Box panel_style {
          name: "panel_style";
          orientation: vertical;

          CenterBox {
            styles ["toolbar", "panel_header"]

            [start]
            Label {
              label: _("<b>Style CSS</b>");
              use-markup: true;
              styles ["dim-label"]
            }
          }

          Separator {
          }

          .CodeView code_view_css {
            language_id: 'css';
          }
        }

        Box panel_ui {
          name: "panel_ui";
          orientation: vertical;

          CenterBox {
            styles ["toolbar", "panel_header"]

            [start]
            Box {
              Label {
                label: _("<b>UI</b>");
                use-markup: true;
                styles ["dim-label"]
              }

              Separator {
                styles ["spacer"]
              }

              DropDown dropdown_ui_lang {
                model: StringList {
                  strings [
                    "XML",
                    "Blueprint",
                  ]
                };
                tooltip-text: _("Convert and Switch Syntax");
              }
              Button button_ui_experimental_blueprint {
                icon-name: "applications-science-symbolic";
                tooltip-text: _("Information About Blueprint");
              }
            }
          }

          Separator {
          }

          Stack stack_ui {
            hexpand: true;

            StackPage {
              name: 'blueprint';
              child: .CodeView code_view_blueprint {
                language_id: 'blueprint';
              };
            }
            StackPage {
              name: 'xml';
              child: .CodeView code_view_xml {
                language_id: 'xml';
              };
            }
          }
        }

        Box panel_preview {
          orientation: vertical;

          CenterBox {
            styles ["toolbar", "panel_header"]

            [start]
            MenuButton {
              halign: center;
              valign: center;
              label: _("Preview");
              styles ["flat"]
              menu-model: preview_menu;
            }

            [center]
            DropDown dropdown_preview_align {
              visible: false;
              model: StringList {
                strings [
                  _("Fill"),
                  _("Center"),
                ]
              };
              tooltip-text: _("Select Preview Mode");
            }

            [end]
            Button button_screenshot {
              icon-name: "re.sonny.Workbench-screenshot-symbolic";
              tooltip-text: _("Take Screenshot of Preview");
              accessibility {
                label: _("Take Screenshot of Preview");
              }
            }
          }

          Separator {
          }

          Stack stack_preview {
            StackPage {
              name: "inline";
              child: Box {
                ScrolledWindow {
                  name: "workbench_output";
                  vexpand: true;
                  hexpand: true;

                  child: Viewport output {
                    halign: fill;
                    valign: fill;
                    styles ["background"]
                  };
                }

                Separator {
                }
              };
            }

            StackPage {
              name: "open_window";
              child: Adw.StatusPage {
                title: _("Windowed Preview");
                description: _("This interface can only be previewed as a separate window.\nWe recommend using “Always on Top”.");
                icon-name: "multitasking-windows-symbolic";

                Box {
                  halign: center;

                  Button button_open_preview_window {
                    label: _("Show Preview Window");
                    styles ["pill", "suggested-action"]
                  }
                }
              };
            }

            StackPage {
              name: "close_window";
              child: Adw.StatusPage {
                title: _("Windowed Preview");
                description: _("This interface can only be previewed as a separate window.\nWe recommend using “Always on Top”.");
                icon-name: "multitasking-windows-symbolic";

                Box {
                  halign: center;

                  Button button_close_preview_window {
                    label: _("Close Preview Window");
                    styles ["pill"]
                  }
                }
              };
            }
          }
        }

        Box panel_placeholder {
          visible: false;
          name: "placeholder";
          halign: center;
          valign: center;

          Image {
            icon-name: "re.sonny.Workbench-placeholder-symbolic";
            pixel-size: 512;
          }
        }
      }

      [end]
      Box {
        orientation: vertical;

        CenterBox toolbar_devtools {
          name: "toolbar_devtools";
          [start]
          Box {
            styles ["toolbar"]

            ToggleButton button_console {
              child: Adw.ButtonContent {
                icon-name: "terminal-symbolic";
                label: _("C_onsole");
                use-underline: true;
              };
              action-name: "win.console";
              tooltip-text: _("Show Logs (Ctrl+Shift+K)");
            }

            Button button_inspector {
              child: Adw.ButtonContent {
                icon-name: "find-location-symbolic";
                label: _("_Inspector");
                use-underline: true;
              };
              tooltip-text: _("Open GTK Inspector (Ctrl+Shift+I)");
            }
          }

          [end]
          Box {
            styles ["toolbar"]

            Button button_clear {
              child: Adw.ButtonContent {
                icon-name: "eraser4-symbolic";
                label: _("Cl_ear");
                use-underline: true;
              };
              action-name: "win.clear";
              tooltip-text: _("Clear Console (Ctrl+K)");
            }
          }
        }

        Box devtools {
          ScrolledWindow {
            Vte.Terminal terminal {
              scroll-unit-is-pixels: true;
              enable-fallback-scrolling: false;
              hexpand: true;
              input-enabled: false;
              scrollback-lines: 512;
            }
          }
        }
      }
    }
  }
}

.Modal modal_blueprint_experimental {
  default-width: 368;
  default-height: 480;

  child: Adw.StatusPage {
    vexpand: true;
    description: _("Future versions may have breaking syntax.");
    title: _("Blueprint is\nExperimental");
    icon-name: "re.sonny.Workbench-beaker";
    Button button_blueprint_documentation {
      halign: center;
      label: _("Documentation");
      styles ["suggested-action", "pill"]
    }
  };
}

menu menu_app {
  section {
    item {
      custom: "themeswitcher";
    }
  }

  section {
    item {
      label: _("Import File…");
      action: "app.open";
    }
  }

  submenu {
    label: _("Bookmarks");
    section {
      label: _("Learn");

      item {
        label: _("Developer Documentation");
        action: "app.open_uri";
        target: "https://developer.gnome.org/documentation/index.html";
      }


      item {
        label: _("Human Interface Guidelines");
        action: "app.open_uri";
        target: "https://developer.gnome.org/hig/";
      }

      item {
        label: _("JavaScript");
        action: "app.open_uri";
        target: "https://gjs.guide";
      }

      item {
        label: _("Vala");
        action: "app.open_uri";
        target: "https://wiki.gnome.org/Projects/Vala";
      }

      item {
        label: _("Blueprint");
        action: "app.open_uri";
        target: "https://gitlab.gnome.org/jwestman/blueprint-compiler";
      }
    }

    section {
      label: _("Get help");

      item {
        label: _("Discourse");
        action: "app.open_uri";
        target: "https://discourse.gnome.org/c/platform/5";
      }

      item {
        label: _("Matrix");
        action: "app.open_uri";
        target: "https://matrix.to/#/#workbench:gnome.org";
      }
    }
  }

  item {
    label: _("Icon Library");
    action: "app.icon_library";
  }

  submenu {
    label: _("Platform Tools");

    item {
      label: _("Adwaita Demo");
      action: "app.platform_tools";
      target: "adwaita-1-demo";
    }

    item {
      label: _("GTK Demo");
      action: "app.platform_tools";
      target: "gtk4-demo";
    }

    item {
      label: _("GTK Widget Factory");
      action: "app.platform_tools";
      target: "gtk4-widget-factory";
    }
  }

  section {
    item {
      label: _("Keyboard Shortcuts");
      action: "app.shortcuts";
    }

    item {
      label: _("About Workbench");
      action: "app.about";
    }
  }
}

menu preview_menu {
  // FIXME: It's unclear if this is needed or helpful
  // know issue: if auto-preview is disabled, Workbench shows a blank preview on start
  item (_("Auto-Update"), "app.auto-preview")
  // FIXME: This will probably be removed in favor of
  // automatcally enabling when we detect a crash
  item (_("Safe Mode"), "app.safe-mode")
}

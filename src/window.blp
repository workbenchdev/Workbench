using Gtk 4.0;
using Adw 1;
using Vte 3.91;
using GtkSource 5;

Adw.ApplicationWindow window {
  default-width: 1024;
  default-height: 768;
  maximized: false;

  Adw.ToolbarView {
    top-bar-style: raised;

    [top]
    Gtk.HeaderBar {
      [start]
      Button button_library {
        child: Adw.ButtonContent {
          icon-name: "library-symbolic";
          label: _("_Library");
          use-underline: true;
        };

        action-name: "app.library";
        tooltip-text: _("Open Library of Demos and Examples (Ctrl+Shift+O)");
      }

      [title]
      Box {
        spacing: 6;
        orientation: horizontal;
        homogeneous: true;

        ToggleButton button_code {
          child: Box {
            halign: center;

            Image {
              icon-name: "re.sonny.Workbench-code-symbolic";
            }

            Label {
              label: _("_Code");
              use-underline: true;
            }
          };

          styles [
            "flat",
            "view-toggler"
          ]
        }

        ToggleButton button_style {
          child: Box {
            halign: center;

            Image {
              icon-name: "larger-brush-symbolic";
            }

            Label {
              label: _("_Style");
              use-underline: true;
            }
          };

          styles [
            "flat",
            "view-toggler"
          ]
        }

        ToggleButton button_ui {
          child: Box {
            halign: center;

            Image {
              icon-name: "re.sonny.Workbench-ui-symbolic";
            }

            Label {
              label: _("_UI");
              use-underline: true;
            }
          };

          styles [
            "flat",
            "view-toggler"
          ]
        }

        ToggleButton button_preview {
          child: Box {
            halign: center;

            Image {
              icon-name: "re.sonny.Workbench-preview-symbolic";
            }

            Label {
              label: _("_Preview");
              use-underline: true;
            }
          };

          styles [
            "flat",
            "view-toggler"
          ]
        }
      }

      [end]
      MenuButton button_menu {
        menu-model: menu_app;
        icon-name: "open-menu-symbolic";
        tooltip-text: _("Main Menu");
        primary: true;
      }

      [end]
      Button button_run {
        child: Adw.ButtonContent {
          icon-name: "media-playback-start-symbolic";
          label: _("_Run");
          use-underline: true;
        };

        action-name: "win.run";
        tooltip-text: _("Run (Ctrl+⏎)");

        styles [
          "suggested-action"
        ]
      }
    }

    // Not used currently but we keep it in case we need it
    Adw.ToastOverlay toast_overlay {
      Paned paned {
        orientation: vertical;
        shrink-start-child: false;
        shrink-end-child: false;
        resize-start-child: true;
        resize-end-child: true;

        [start]
        Box {
          orientation: horizontal;
          vexpand: true;
          homogeneous: true;

          Adw.ToolbarView panel_code {
            name: "panel_code";

            [top]
            CenterBox {
              styles [
                "toolbar",
                "panel_header"
              ]

              height-request: 46;

              [start]
              Box {
                Label {
                  label: _("<b>Code</b>");
                  use-markup: true;

                  styles [
                    "dim-label"
                  ]
                }

                Separator {
                  styles [
                    "spacer"
                  ]
                }

                DropDown dropdown_code_lang {
                  model: StringList {
                    strings [
                      "JavaScript",
                      "Vala",
                      "Rust",
                      "Python",
                    ]
                  };

                  tooltip-text: _("Switch Document");
                }
              }
            }

            Separator {}

            Stack stack_code {
              hexpand: true;

              StackPage {
                name: 'JavaScript';

                child: $CodeView code_view_javascript {
                  language_id: 'js';
                };
              }

              StackPage {
                name: 'Vala';

                child: $CodeView code_view_vala {
                  language_id: 'vala';
                };
              }

              StackPage {
                name: 'Rust';

                child: $CodeView code_view_rust {
                  language_id: 'rust';
                };
              }

              StackPage {
                name: 'Python';

                child: $CodeView code_view_python {
                  language_id: 'python3';
                };
              }
            }
          }

          Adw.ToolbarView panel_style {
            name: "panel_style";

            [top]
            CenterBox {
              styles [
                "toolbar",
                "panel_header"
              ]

              height-request: 46;

              [start]
              Label {
                label: _("<b>Style CSS</b>");
                use-markup: true;

                styles [
                  "dim-label"
                ]
              }
            }

            Separator {}

            $CodeView code_view_css {
              language_id: 'css';
            }
          }

          Adw.ToolbarView panel_ui {
            name: "panel_ui";

            [top]
            CenterBox {
              styles [
                "toolbar",
                "panel_header"
              ]

              height-request: 46;

              [start]
              Box {
                Label {
                  label: _("<b>UI</b>");
                  use-markup: true;

                  styles [
                    "dim-label"
                  ]
                }

                Separator {
                  styles [
                    "spacer"
                  ]
                }

                DropDown dropdown_ui_lang {
                  model: StringList {
                    strings [
                      "Blueprint",
                      "XML",
                    ]
                  };

                  tooltip-text: _("Convert and Switch Syntax");
                }

                Button button_ui_experimental_blueprint {
                  icon-name: "applications-science-symbolic";
                  tooltip-text: _("Information About Blueprint");
                }
              }
            }

            Separator {}

            Stack stack_ui {
              hexpand: true;

              StackPage {
                name: 'blueprint';

                child: $CodeView code_view_blueprint {
                  language_id: 'blueprint';
                };
              }

              StackPage {
                name: 'xml';

                child: $CodeView code_view_xml {
                  language_id: 'xml';
                };
              }
            }
          }

          Adw.ToolbarView panel_preview {
            name: "panel_preview";

            [top]
            CenterBox {
              styles [
                "toolbar",
                "panel_header"
              ]

              height-request: 46;

              [start]
              MenuButton {
                halign: center;
                valign: center;
                label: _("Preview");

                styles [
                  "flat"
                ]

                menu-model: preview_menu;
              }

              [center]
              DropDown dropdown_preview_align {
                visible: false;

                model: StringList {
                  strings [
                    _("Fill"),
                    _("Center"),
                  ]
                };

                tooltip-text: _("Select Preview Mode");
              }

              [end]
              Button button_screenshot {
                icon-name: "re.sonny.Workbench-screenshot-symbolic";
                tooltip-text: _("Screenshot Preview");

                accessibility {
                  label: _("Screenshot Preview");
                }
              }
            }

            Separator {}

            Stack stack_preview {
              StackPage {
                name: "inline";

                child: Box {
                  ScrolledWindow {
                    vexpand: true;
                    hexpand: true;

                    child: Viewport output {
                      halign: fill;
                      valign: fill;

                      styles [
                        "background"
                      ]
                    };
                  }

                  Separator {}
                };
              }

              StackPage {
                name: "open_window";

                child: Adw.StatusPage {
                  title: _("Windowed Preview");
                  description: _("This interface can only be previewed as a separate window.\nWe recommend using “Always on Top”.");
                  icon-name: "multitasking-windows-symbolic";

                  Box {
                    halign: center;

                    Button button_open_preview_window {
                      label: _("Show Preview Window");

                      styles [
                        "pill",
                        "suggested-action"
                      ]
                    }
                  }
                };
              }

              StackPage {
                name: "close_window";

                child: Adw.StatusPage {
                  title: _("Windowed Preview");
                  description: _("This interface can only be previewed as a separate window.\nWe recommend using “Always on Top”.");
                  icon-name: "multitasking-windows-symbolic";

                  Box {
                    halign: center;

                    Button button_close_preview_window {
                      label: _("Close Preview Window");

                      styles [
                        "pill"
                      ]
                    }
                  }
                };
              }
            }
          }

          Box panel_placeholder {
            visible: false;
            name: "placeholder";
            halign: center;
            valign: center;

            Image {
              icon-name: "re.sonny.Workbench-placeholder-symbolic";
              pixel-size: 512;
            }
          }
        }

        [end]
        Adw.ToolbarView {
          name: "panel_devtools";

          [top]
          CenterBox toolbar_devtools {
            name: "toolbar_devtools";

            styles [
              "toolbar",
              "panel_header"
            ]

            [start]
            Box {
              spacing: 6;

              ToggleButton button_console {
                child: Adw.ButtonContent {
                  icon-name: "terminal-symbolic";
                  label: _("C_onsole");
                  use-underline: true;
                };

                action-name: "win.console";
                tooltip-text: _("Show Logs (Ctrl+Shift+K)");
              }

              Button button_inspector {
                child: Adw.ButtonContent {
                  icon-name: "find-location-symbolic";
                  label: _("_Inspector");
                  use-underline: true;
                };

                tooltip-text: _("Open GTK Inspector (Ctrl+Shift+I)");
              }
            }

            [end]
            Box {
              Button button_clear {
                child: Adw.ButtonContent {
                  icon-name: "eraser4-symbolic";
                  label: _("Cl_ear");
                  use-underline: true;
                };

                action-name: "win.clear";
                tooltip-text: _("Clear Console (Ctrl+K)");
              }
            }
          }

          Box devtools {
            ScrolledWindow {
              Vte.Terminal terminal {
                scroll-unit-is-pixels: true;
                enable-fallback-scrolling: false;
                hexpand: true;
                input-enabled: false;
                scrollback-lines: 512;
              }
            }

            GestureClick gesture_console_click {
              button: 3;
            }

            PopoverMenu popover_menu_console {
              menu-model: menu_console;
              has-arrow: false;
              halign: start;
            }
          }
        }
      }
    }
  }
}

$Modal modal_blueprint_experimental {
  default-width: 368;
  default-height: 480;

  child: Adw.StatusPage {
    vexpand: true;
    description: _("Future versions may have breaking syntax");
    title: _("Blueprint is\nExperimental");
    icon-name: "re.sonny.Workbench-beaker";

    Button button_blueprint_documentation {
      halign: center;
      label: _("Documentation");

      styles [
        "suggested-action",
        "pill"
      ]
    }
  };
}

menu menu_app {
  section {
    item {
      custom: "themeswitcher";
    }
  }

  section {
    item {
      label: _("Open Project…");
      action: "app.open";
      target: "project";
    }

    submenu {
      label: _("Bookmarks");

      section {
        label: _("Learn");

        item {
          label: _("Developer Documentation");
          action: "app.open_uri";
          target: "https://developer.gnome.org/documentation/index.html";
        }

        item {
          label: _("Human Interface Guidelines");
          action: "app.open_uri";
          target: "https://developer.gnome.org/hig/";
        }

        item {
          label: _("JavaScript");
          action: "app.open_uri";
          target: "https://gjs.guide";
        }

        item {
          label: _("Vala");
          action: "app.open_uri";
          target: "https://wiki.gnome.org/Projects/Vala";
        }

        item {
          label: _("Rust");
          action: "app.open_uri";
          target: "https://gtk-rs.org";
        }

        item {
          label: _("Python");
          action: "app.open_uri";
          target: "https://pygobject.readthedocs.io";
        }

        item {
          label: _("Blueprint");
          action: "app.open_uri";
          target: "https://gitlab.gnome.org/jwestman/blueprint-compiler";
        }
      }

      section {
        label: _("Get Help");

        item {
          label: _("Discourse");
          action: "app.open_uri";
          target: "https://discourse.gnome.org/c/platform/5";
        }

        item {
          label: _("Matrix");
          action: "app.open_uri";
          target: "https://matrix.to/#/#workbench:gnome.org";
        }
      }
    }

    item {
      label: _("Icon Library");
      action: "app.icon_library";
    }

    submenu {
      label: _("Platform Tools");

      item {
        label: _("Adwaita Demo");
        action: "app.platform_tools";
        target: "adwaita-1-demo";
      }

      item {
        label: _("GTK Demo");
        action: "app.platform_tools";
        target: "gtk4-demo";
      }

      item {
        label: _("GTK Widget Factory");
        action: "app.platform_tools";
        target: "gtk4-widget-factory";
      }
    }
  }

  item {
    label: _("Extensions");
    action: "app.extensions";
  }

  section {
    item {
      label: _("Keyboard Shortcuts");
      action: "app.shortcuts";
    }

    item {
      label: _("About Workbench");
      action: "app.about";
    }
  }
}

menu preview_menu {
  // FIXME: It's unclear if this is needed or helpful
  // know issue: if auto-preview is disabled, Workbench shows a blank preview on start
  item (_("Auto-Update"), "win.auto-preview")
  // FIXME: This will probably be removed in favor of
  // automatcally enabling when we detect a crash
  item (_("Safe Mode"), "win.safe-mode")
}

Adw.AlertDialog alert_dialog_save_project {
  responses [
    cancel: _("Cancel"),
    discard: _("Discard") destructive,
    save: _("Save") suggested disabled,
  ]

  close-response: "cancel";
  heading: _("Save Project?");
  body: _("This session has not been saved. Unsaved sessions will be permanently lost.");

  extra-child: Box {
    margin-top: 12;
    orientation: vertical;
    spacing: 24;

    ListBox {
      selection-mode: none;

      styles [
        "boxed-list"
      ]

      Adw.EntryRow row_project_name {
        title: _("Project Name");
      }
    }

    Box {
      orientation: vertical;

      ListBox {
        selection-mode: none;

        styles [
          "boxed-list"
        ]

        Adw.ActionRow row_project_location {
          title: _("Location");
          subtitle: "Select Location";
          activatable-widget: button_location;
        }
      }

      Label {
        margin-start: 12;
        margin-top: 12;
        halign: start;
        label: _("The project will be created in a new subdirectory");

        styles [
          "dim-label",
          "caption"
        ]

        justify: left;
      }
    }
  };
}

Button button_location {
  icon-name: "folder-symbolic";
  valign: center;

  styles [
    "flat"
  ]
}

menu menu_console {
  section {
    item {
      label: _("Copy");
      action: "win.console_copy";
    }

    item {
      label: _("Select All");
      action: "win.console_select_all";
    }

    item {
      label: _("Clear");
      action: "win.clear";
    }
  }
}

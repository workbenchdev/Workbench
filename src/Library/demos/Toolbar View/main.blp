using Gtk 4.0;
using Adw 1;

Adw.Window {
  width-request: 360;
  height-request: 200;
  default-width: 640;
  default-height: 640;

  Adw.ToolbarView toolbar_view {
    vexpand:true;
    extend-content-to-bottom-edge: true;
    extend-content-to-top-edge: true;
    top-bar-style: bind barstyle_select.selected;
    bottom-bar-style: bind barstyle_select.selected;
    reveal-top-bars:  true;
    reveal-bottom-bars: true;
    [top]
    Adw.HeaderBar header_top {
      title-widget: Label {
      label:_("Header Bar");
      };
    }
    content: Adw.ViewStack stack {
      vexpand: true;

      Adw.ViewStackPage page_defualt {
        name: "page_default";
        title: _("Toolbar View");
        icon-name: "toolbars-symbolic";
        child: Adw.StatusPage{
          Box {
            halign: center;
            orientation: vertical;
            spacing: 18;
            Label{
              label: _("Toolbar View");
              styles ["title-1"]
            }
            Label{
              wrap: true;
              label: _("A widget containing a page, as well as top and/or bottom bars.");
            }
            LinkButton{
              label: _("API Reference");
              uri: "https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/class.ToolbarView.html";
            }
            Adw.PreferencesPage {
              Adw.PreferencesGroup {
                styles ["boxed-list"]
                Adw.ComboRow topbar_select {
                  title: _("Select top bar:  ");
                  model: StringList {
                    strings [_("Header Bar"),_("Tab Bar"),_("View Switcher Bar"),_("Action Bar"),_("PopOverMenu Bar"),_("Search Bar"),_("Gtk Box")]
                  };
                  styles ["heading"]
                }
                Adw.ComboRow bottombar_select{
                  title: _("Select bottom bar:  ");
                  model: StringList {
                    strings [_("Header Bar"),_("Tab Bar"),_("View Switcher Bar"),_("Action Bar"),_("PopOverMenu Bar"),_("Search Bar"),_("Gtk Box")]
                  };
                  styles ["heading"]
                }
                Adw.ComboRow barstyle_select{
                  title: _("Select style for the bars:  ");
                  model: StringList {
                    strings [_("Flat"),_("Raised"),_("Raised-Border")]
                  };
                  styles ["heading"]
                }
              }
            }
            Box {
              halign: center;
              spacing: 12;
              ToggleButton reveal_topbar{
                label: _("Reveal Top Bar");
                active: true;
                styles ["pill"]
              }
              ToggleButton reveal_bottombar{
                label: _("Reveal Bottom Bar");
                active: true;
                styles ["pill"]
              }
            }
          }
        };
      }

      Adw.ViewStackPage page1 {
        name: "page1";
        title: _("Page 1");
        icon-name: "explore2-symbolic";
        use-underline: true;
        child: Adw.StatusPage{
          title: _("Hello");
          };
        }

      Adw.ViewStackPage page2 {
        name: "page2";
        title: _("Page 2");
        icon-name: "explore2-symbolic";
        use-underline: true;
        child: Adw.StatusPage{
          title: _("from");
          };
      }

      Adw.ViewStackPage page3 {
        name: "page3";
        title: _("Page 3");
        icon-name: "explore2-symbolic";
        use-underline: true;
        child: Adw.StatusPage{
          title: _("Workbench");
        };
      }
    };
    [bottom]
    Adw.HeaderBar header_bottom {
      title-widget: Label{
      label: _("Header Bar");
      };
    }
  }
}
ActionBar action_bar {
  revealed: true;
  valign: end;

  [start]
  Button start_widget {
    icon-name: "call-start-symbolic";
  }

  [center]
  DropDown {
    model: StringList {
      strings ["Center Widget","üëÅÔ∏è", "‚ù§Ô∏è", "üíº", "ü™ë"]
    };
  }

  [end]
  Button end_widget {
    icon-name: "padlock2-symbolic";
  }
}

Adw.ViewSwitcherBar switcher_bar {
  stack: stack;
  reveal: true;
}

PopoverMenuBar popover {
  menu-model: menu_app;
}

menu menu_app {
  section {
    item {
      label: _("Keyboard Shortcuts");
      action: "app.shortcuts";
    }

    item {
      label: _("About Workbench");
      action: "app.about";
    }
  }
}

SearchBar search_bar {
  search-mode-enabled: true;
  show-close-button: true;
  SearchEntry {
    placeholder-text: _("Start Searching...");
  }
}

Box gtk_box {
  hexpand: true;
  halign: center;
  Gtk.Label {
    label: _("Hello from Workbench");
  }
}
Adw.TabBar tab_bar {
  view: tab_view;
}
Adw.TabView tab_view{
  Adw.TabPage main_tab_page{
    title: _("First Page");
    child:
      Adw.StatusPage {
        hexpand: true;
        vexpand: true;
        title: _("Tab View");
        description: _("A dynamic tabbed container");
      };
  }
    Adw.TabPage main_tab_page2{
    title: _("Second Page");
    child:
      Adw.StatusPage {
        hexpand: true;
        vexpand: true;
        title: _("Tab View");
        description: _("A dynamic tabbed container");
      };
  }
}
